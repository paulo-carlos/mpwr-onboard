import * as React from "react"
import { useState, useEffect, useRef } from "react"
import { Frame, useCycle, addPropertyControls, ControlType } from "framer"
import { useKeyboardEvent } from "./Hooks"

export function Password(props) {
    const [value, setValue] = useState(props.value)
    const [isLocked, setIsLocked] = useState(true)
    const [hasError, setHasError] = useState(false)

    useKeyboardEvent(
        "Enter",
        () => {
            if (value === props.password) {
                setIsLocked(false)
            } else if (value !== "") {
                setHasError(true)
            } else {
                setHasError(false)
            }
        },
        [value]
    )

    function handleChange(event) {
        if (value === "" && hasError) {
            setHasError(false)
        }
        setValue(event.target.value)
    }

    if (isLocked) {
        return (
            <Frame
                size={"100%"}
                style={{
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    background: props.isDark ? "#0A0A0A" : "white",
                    flexDirection: "column",
                }}
            >
                <div style={{ width: "100%" }}>
                    <input
                        style={InputStyle(props, isLocked, hasError)}
                        placeholder={props.placeholder}
                        value={value}
                        onChange={event => handleChange(event)}
                        autoFocus={true}
                        autoCorrect={"off"}
                        autoComplete={"off"}
                        spellCheck={false}
                    />
                </div>
                <div
                    style={{
                        color: hasError
                            ? "#F86"
                            : props.isDark
                            ? "#444"
                            : "#777",
                        marginTop: 8,
                        fontSize: 12,
                        position: "relative",
                        opacity: value !== "" ? 1 : 0,
                    }}
                >
                    {hasError ? "Try again" : "Press enter"}
                </div>
            </Frame>
        )
    } else {
        return null
    }
}

Password.defaultProps = {
    placeholder: "Enter Password",
    value: "",
    password: "hooks",
    onEnter: () => null,
    isDark: true,
    width: 600,
    height: 400,
}

addPropertyControls(Password, {
    password: {
        type: ControlType.String,
        title: "Password",
    },
    isDark: {
        type: ControlType.Boolean,
        title: "Appearance",
        enabledTitle: "Dark",
        disabledTitle: "Light",
    },
})

// Styling
function InputStyle(props, isLocked, hasError): React.CSSProperties {
    return {
        background: "rgba(0,0,0,0)",
        height: 56,
        outline: "none",
        borderRadius: 12,
        width: "100%",
        padding: 16,
        fontSize: props.width <= 600 ? 28 : 32,
        fontWeight: 500,
        border: "1px solid rgba(0,0,0,0)",
        textAlign: "center",
        color: props.isDark ? "white" : "black",
    }
}
